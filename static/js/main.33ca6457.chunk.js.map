{"version":3,"sources":["../../src/core/Constants.ts","../../node_modules/d3-selection/src/selection/iterator.js","../../src/core/utils.ts","../../src/core/CanvasNode.ts","../../src/core/NodeRegistry.ts","../../src/core/NodeResolver.ts","../../src/components/Connector.tsx","../../node_modules/d3-dispatch/src/dispatch.js","../../node_modules/d3-selection/src/namespaces.js","../../node_modules/d3-selection/src/namespace.js","../../node_modules/d3-selection/src/creator.js","../../node_modules/d3-selection/src/selector.js","../../node_modules/d3-selection/src/array.js","../../node_modules/d3-selection/src/selectorAll.js","../../node_modules/d3-selection/src/matcher.js","../../node_modules/d3-selection/src/selection/selectChild.js","../../node_modules/d3-selection/src/selection/selectChildren.js","../../node_modules/d3-selection/src/selection/sparse.js","../../node_modules/d3-selection/src/selection/enter.js","../../node_modules/d3-selection/src/constant.js","../../node_modules/d3-selection/src/selection/data.js","../../node_modules/d3-selection/src/selection/sort.js","../../node_modules/d3-selection/src/selection/attr.js","../../node_modules/d3-selection/src/window.js","../../node_modules/d3-selection/src/selection/style.js","../../node_modules/d3-selection/src/selection/property.js","../../node_modules/d3-selection/src/selection/classed.js","../../node_modules/d3-selection/src/selection/text.js","../../node_modules/d3-selection/src/selection/html.js","../../node_modules/d3-selection/src/selection/raise.js","../../node_modules/d3-selection/src/selection/lower.js","../../node_modules/d3-selection/src/selection/insert.js","../../node_modules/d3-selection/src/selection/remove.js","../../node_modules/d3-selection/src/selection/clone.js","../../node_modules/d3-selection/src/selection/on.js","../../node_modules/d3-selection/src/selection/dispatch.js","../../node_modules/d3-selection/src/selection/index.js","../../node_modules/d3-selection/src/select.js","../../node_modules/d3-selection/src/pointer.js","../../node_modules/d3-selection/src/sourceEvent.js","../../node_modules/d3-drag/src/noevent.js","../../node_modules/d3-selection/src/selection/select.js","../../node_modules/d3-selection/src/selection/selectAll.js","../../node_modules/d3-selection/src/selection/filter.js","../../node_modules/d3-selection/src/selection/exit.js","../../node_modules/d3-selection/src/selection/join.js","../../node_modules/d3-selection/src/selection/merge.js","../../node_modules/d3-selection/src/selection/order.js","../../node_modules/d3-selection/src/selection/call.js","../../node_modules/d3-selection/src/selection/nodes.js","../../node_modules/d3-selection/src/selection/node.js","../../node_modules/d3-selection/src/selection/size.js","../../node_modules/d3-selection/src/selection/empty.js","../../node_modules/d3-selection/src/selection/each.js","../../node_modules/d3-selection/src/selection/append.js","../../node_modules/d3-selection/src/selection/datum.js","../../node_modules/d3-drag/src/constant.js","../../src/components/Pin.tsx","../../node_modules/d3-drag/src/event.js","../../node_modules/d3-drag/src/drag.js","../../node_modules/d3-drag/src/nodrag.js","../../src/components/BaseNode.tsx","../../src/components/Canvas.tsx","nodes/NumberInputNode.ts","nodes/SumValuesNode.ts","nodes/ScatterPlotNode.ts","nodes/components/SumValuesGraphNode.tsx","resolver/LocalNodeResolver.ts","nodes/DataPreviewNode.ts","nodes/components/ScatterPlotGraphNode.tsx","nodes/components/DataPreviewGraphNode.tsx","nodes/components/NumberInputGraphNode.tsx","nodes/components/RandomDataGraphNode.tsx","Dashboard.tsx","App.jsx","index.js"],"names":["ItemTypes","buildPinId","node","pinName","destructPinId","pinId","parts","nodeId","pin","snapped","x","size","Math","shouldAllowInputEvent","el","i","connToPinId","c","CanvasNode","this","d","NodeRegistry","nodeTypes","registerType","info","instantiateNewNode","args","id","generateId","obj","Array","String","Date","renderNode","getNodeTypeInfo","NodeResolver","nodes","restoreNodes","on","handlers","unbind","event","filter","e","getNodes","getConnections","render","type","registry","resolver","resolvedData","resolveNode","minWidth","minHeight","height","createNode","destroyNode","Object","outputFormat","connections","forNodeOutputConnections","callback","updateNode","updatedNode","eventInfo","isValidInputPin","input","isValidOutputPin","output","createPinConnection","createsCycle","from","receiveing","connection","buildNewConnection","inputPins","linkFrom","linksByFrom","internalDestroyConnection","prev","linksByTo","fromPinId","linksFrom","link","links","conn","j","setupNodes","bakeConnections","toPinId","findOutputConnectedNodes","uniqueOutputs","nodeOutputs","checkPin","issueEvent","handler","fromNode","fromPin","to","toNodeId","toPinName","visited","tocheck","next","otherNodes","Connector","startPoint","endPoint","instructions","className","noop","value","dispatch","t","n","arguments","length","_","test","Error","Dispatch","parseTypenames","typenames","types","trim","split","map","name","indexOf","slice","hasOwnProperty","get","set","concat","push","prototype","constructor","typename","T","copy","call","that","apply","xhtml","svg","xlink","xml","xmlns","prefix","namespaces","space","local","creatorInherit","document","ownerDocument","uri","namespaceURI","documentElement","createElement","createElementNS","creatorFixed","fullname","namespace","none","selector","querySelector","empty","childMatcher","matches","find","childFirst","firstElementChild","children","update","EnterNode","parent","datum","_next","_parent","__data__","bindIndex","group","enter","exit","data","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","Map","keyValues","has","delete","ascending","a","b","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","defaultView","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","add","classedRemove","remove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","parentNode","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","selection_cloneShallow","clone","cloneNode","selection_cloneDeep","onRemove","__on","o","m","removeEventListener","listener","options","onAdd","contextListener","addEventListener","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","groups","_groups","child","querySelectorAll","join","splice","contains","root","Selection","parents","_parents","sourceEvent","undefined","currentTarget","ownerSVGElement","createSVGPoint","point","clientX","y","clientY","matrixTransform","getScreenCTM","inverse","getBoundingClientRect","rect","left","clientLeft","top","clientTop","pageX","pageY","nopropagation","stopImmediatePropagation","preventDefault","select","subgroups","subnode","subgroup","selectAll","arrayAll","selectorAll","selectChild","match","childFind","selectChildren","childrenFilter","matcher","bind","constant","enterGroup","updateGroup","exitGroup","previous","i0","i1","_enter","_exit","sparse","onenter","onupdate","onexit","append","merge","order","selection","groups0","groups1","m0","m1","min","merges","group0","group1","compareDocumentPosition","sort","compare","compareNode","sortgroups","sortgroup","each","attr","getAttributeNS","property","classed","text","html","create","creator","insert","before","deep","Symbol","iterator","selection_iterator","DragEvent","subject","target","identifier","active","dx","dy","defineProperties","enumerable","configurable","defaultFilter","ctrlKey","button","defaultContainer","defaultSubject","defaultTouchable","navigator","maxTouchPoints","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","view","mousemoved","mouseupped","noevent","__noselect","MozUserSelect","nodrag","mouse","noclick","setTimeout","yesdrag","touches","changedTouches","clearTimeout","touch","s","p","pointer","p0","clickDistance","sqrt","expected","OutputPin","visualName","dataType","useDrag","item","collect","dragging","monitor","activeClasses","hideName","pinElement","dragRef","drop","useDrop","accept","canDrop","isOver","clientOffset","React","InputPin","error","classes","displayName","BaseNode","props","pinChangedAndIsValid","afterPin","after","componentDidUpdate","width","d3select","dragArea","resize","minW","minH","MIN_HEIGHT","registerForDragging","dragCall","d3drag","nohistory","moveTop","registerForResize","dragResize","componentDidMount","hasError","outputPins","ref","title","role","onClick","maxHeight","SvgCanvas","canvas","Canvas","shouldRenderConnections","description","zoom","variableDropped","svgPoint","offset","mainGroup","current","g","pt","screenToSvg","closest","renderConnections","VISUAL_OFFSET","transform","state","bA","bB","posA","posB","console","renderNodes","entries","resolverStateChanged","saveNodeHistory","undo","undoIndex","undodata","redoOnce","useFromHistory","undoOnce","componentWillUnmount","dragG","d3","k","prevState","fill","visibility","pointerEvents","NumberInputNode","Type","Name","MinDimensions","outValue","InputFormat","OutputFormat","Construct","LocalResolve","SumValuesNode","op","operatorPlus","operatorSubtract","operatorMultiply","operatorDivide","operatorPow","sumNumberToArray","operator","sum","forEach","outSum","inA","inB","operation","fetchOperator","isArray","sumArrays","ScatterPlotNode","SumValuesGraphNode","DropdownButton","Dropdown","Item","as","invalidateOutput","overflow","Component","LocalNodeRegistry","LocalNodeResolver","pinData","resolvedNodes","typeDef","inputData","resolveNodeInputs","outputs","resolveNodeOutputs","subNodeId","invalidateNodeOutput","inputFormat","keys","resolvePinData","localResolve","DataPreviewNode","ScatterPlotGraphNode","graph","assert","useData","area","scaleX","range","domain","scaleY","xy","cx","cy","r","viewBox","buildgraph","DataPreviewGraphNode","array","more","Row","Col","getView","datatype","mapArray","warn","NumberInputGraphNode","inputRef","createRef","onBlur","onChange","ev","Form","Control","padding","placeholder","onKeyPress","RandomDataGraphNode","randData","generateRandomData","floor","random","Button","VisualNodeOption","details","VISUAL_NODE","Render","Dashboard","nodeRegistry","Container","fluid","md","paddingTop","paddingLeft","margin","clipboard","writeText","JSON","stringify","nodeType","App","DndProvider","backend","HTML5Backend","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.33ca6457.chunk.js","sourcesContent":["export enum ItemTypes {\n  // From outside into svg\n  VISUAL_NODE = 'VISUAL_NODE',\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","/**\n * Builds a pin id based on a node id and a pin name\n * @param node the node id\n * @param pinName the pin name\n */\nexport function buildPinId(node: string, pinName: string) {\n  return `${node}-${pinName}`\n}\n\n/**\n * Destruct a pin id into node and pin name.\n * PinId must be constructed using {@link buildPinId}\n * @param pinId the pin id.\n */\nexport function destructPinId(pinId: string) {\n  const parts = pinId.split('-')\n  const dataNode = parts[0]\n  const dataNodePinName = parts[1]\n  return { nodeId: dataNode, pin: dataNodePinName }\n}\n\nexport function screenToSvg(\n  svg: SVGSVGElement,\n  g: SVGGElement,\n  x: number,\n  y: number\n) {\n  var pt = svg.createSVGPoint()\n  pt.x = x\n  pt.y = y\n  const p = pt.matrixTransform(g.getScreenCTM()!.inverse())\n  return [p.x, p.y]\n}\n\nexport function snapped(x: number, size = 16) {\n  return Math.round(x / size) * size\n}\n\nexport function shouldAllowInputEvent(el: any) {\n  let i = 0\n  while (i < 20 && el) {\n    if (el instanceof HTMLInputElement || el instanceof HTMLButtonElement) {\n      return false\n    }\n    if (el.classList && el.classList.contains('node-noglobals')) {\n      return false\n    }\n    el = el.parentNode\n    i++\n  }\n  return true\n}\n","import { buildPinId } from './utils'\n\nexport interface InputPins {\n  [key: string]: string | undefined\n}\n\nexport interface ConnectionInfo {\n  node: string\n  pin: string\n}\n\nexport function connToPinId(c: ConnectionInfo) {\n  return buildPinId(c.node, c.pin)\n}\n\nexport interface Connection {\n  to: ConnectionInfo\n  from: ConnectionInfo\n}\n\n/**\n * Base of all nodes\n */\nexport class CanvasNode {\n  type: string\n  id: string\n  x: number\n  y: number\n  width: number\n  height: number\n\n  /**\n   * Incomming connections\n   */\n  inputPins: InputPins\n\n  /**\n   * Should hold any persistent data for this node.\n   */\n  data?: any\n\n  constructor(d: any) {\n    this.id = d.id\n    this.type = d.type\n    this.x = d.x\n    this.y = d.y\n    this.width = d.width\n    this.height = d.height\n    this.inputPins = d.inputPins || {}\n  }\n}\n","import { CanvasNode } from './CanvasNode'\n\nexport type LinkDataType = string[] | string\n\ninterface AInputFormat {\n  type: LinkDataType\n  visualName?: string\n}\n\nexport interface InputFormat {\n  [key: string]: AInputFormat\n}\n\nexport interface NodeDimension {\n  width?: number\n  height?: number\n}\n\n/**\n * Basic fields of a node definition\n */\nexport interface NodeTypeDefinition {\n  /**\n   * Type name\n   */\n  Type: string\n\n  /**\n   * Useful to show in the interface\n   */\n  Name: string\n\n  /**\n   * Node input information\n   */\n  InputFormat?: InputFormat\n\n  /**\n   * Node output information\n   */\n  OutputFormat?: InputFormat\n\n  /**\n   * Minimun node dimensions\n   */\n  MinDimensions?: NodeDimension\n\n  /**\n   * A method to construct the object\n   */\n  Construct(args: any): CanvasNode\n\n  /**\n   * Renders a node\n   * @param node the node\n   */\n  Render(node: CanvasNode): any\n}\n\n/**\n * Holds information about node types\n */\nexport class NodeRegistry<ExtraDefProps = {}> {\n  nodeTypes: { [key: string]: NodeTypeDefinition & ExtraDefProps } = {}\n\n  /**\n   * Register a new node type\n   * @param info the node definition information\n   */\n  registerType(info: NodeTypeDefinition & ExtraDefProps) {\n    this.nodeTypes[info.Type] = info\n  }\n\n  /**\n   * Instantiate a new node\n   * @param type the node type, must have been registered\n   * @param args properties passed to the constructed object\n   */\n  instantiateNewNode(type: string, args: any) {\n    const info = this.nodeTypes[type]\n    if (!args.id) {\n      args = { ...args, id: this.generateId() }\n    }\n\n    args.width = Math.max(args.width || 160, info.MinDimensions?.width || 160)\n    args.height = Math.max(\n      args.height || 112,\n      info.MinDimensions?.height || 112\n    )\n    const obj = info.Construct(args)\n    obj.type = info.Type\n    return obj\n  }\n\n  generateId() {\n    // TODO: Use something else?\n    // ++__ids;\n    // return '_' + __ids;\n    return (\n      Array(16)\n        .fill(0)\n        .map(() => String.fromCharCode(Math.floor(Math.random() * 26) + 97))\n        .join('') + Date.now().toString(24)\n    )\n  }\n\n  /**\n   * Calls the render method based on node type\n   * @param node the node to be rendered\n   */\n  renderNode<T extends CanvasNode>(node: T) {\n    return this.nodeTypes[node.type].Render(node)\n  }\n\n  /**\n   * Retrieves the node type definition\n   * @param type a type that is registered\n   */\n  getNodeTypeInfo(type: string): NodeTypeDefinition & ExtraDefProps {\n    return this.nodeTypes[type]\n  }\n}\n","import { CanvasNode, Connection, connToPinId } from './CanvasNode'\nimport { NodeRegistry } from './NodeRegistry'\nimport { destructPinId, buildPinId } from './utils'\n\nexport interface ConnectionMap {\n  [key: string]: Connection\n}\n\nexport interface ConnectionMapFrom {\n  [key: string]: Connection[]\n}\n\nexport interface NodeMap {\n  [key: string]: CanvasNode\n}\n\nexport const NewNodeEvent = 'node-new'\nexport const UpdateNodeEvent = 'node-update'\nexport const DeleteNodeEvent = 'node-delete'\nexport const NewConnectionEvent = 'connection-new'\n\nexport interface ResolverEvent {\n  type: string\n  nodes?: NodeMap\n  connections?: ConnectionMap\n  node?: CanvasNode\n  connection?: Connection\n  invalidateOutput?: boolean\n  moveTop?: boolean // Moves element to the end of node map\n  [key: string]: any\n}\n\n/**\n * Keeps state of nodes and connections\n */\nexport abstract class NodeResolver<T extends NodeRegistry = NodeRegistry> {\n  registry: T\n  nodes: NodeMap\n  handlers: { [key: string]: Function[] }\n  linksByTo: ConnectionMap\n  linksByFrom: ConnectionMapFrom\n\n  constructor(registry: T, nodes?: any) {\n    this.registry = registry\n    this.nodes = nodes || {}\n    this.handlers = {}\n    this.linksByTo = {}\n    this.linksByFrom = {}\n    this.setupNodes(this.nodes)\n  }\n\n  /**\n   * Recreates the entire node graph using the provided node map.\n   * @param nodes the node map to use\n   * @returns a map with all unique connections in the graph\n   */\n  restoreNodes(nodes: NodeMap): ConnectionMap {\n    this.setupNodes(nodes)\n    return this.linksByTo\n  }\n\n  /**\n   * Called when an update event sets the invalidateOutput flag\n   * @param nodeId the node that had the input validated\n   */\n  abstract invalidateNodeOutput(nodeId: string): void\n\n  /**\n   * Register event listener\n   * @param event one of {@link NewNodeEvent}, {@link UpdateNodeEvent}, {@link NewConnectionEvent}\n   * @param handler function to be called\n   */\n  on(event: string, handler: Function): void {\n    if (!this.handlers[event]) {\n      this.handlers[event] = []\n    }\n    this.handlers[event].push(handler)\n  }\n\n  /**\n   * Unregister event listener\n   * @param event one of {@link NewNodeEvent}, {@link UpdateNodeEvent}, {@link NewConnectionEvent}\n   * @param handler the function\n   */\n  unbind(event: string, handler: Function): void {\n    if (!this.handlers[event]) {\n      this.handlers[event] = []\n    }\n    this.handlers[event] = this.handlers[event].filter((e) => e !== handler)\n  }\n\n  /**\n   * Get current nodes\n   */\n  getNodes(): NodeMap {\n    return this.nodes\n  }\n\n  /**\n   * Get unique connections (by input pinId)\n   */\n  getConnections(): ConnectionMap {\n    return this.linksByTo\n  }\n\n  /**\n   * Render a node, also embeds some properties such as a reference to the resolver.\n   * @param node the node to be rendered\n   */\n  render(node: CanvasNode): any {\n    const type = this.registry.getNodeTypeInfo(node.type);\n    return this.registry.renderNode({\n      ...node,\n      resolver: this,\n      resolvedData: this.resolveNode(node),\n      minWidth: type.MinDimensions?.width,\n      minHeight: type.MinDimensions?.height\n    })\n  }\n\n  /**\n   * Create a new node\n   * @param type One of the registered types\n   * @param props Properties passed to the construction of the node\n   */\n  createNode(type: string, { ...args }: any) {\n    const node = this.registry.instantiateNewNode(type, args)\n    this.nodes = { ...this.nodes, [node.id]: node }\n    this.issueEvent({ type: NewNodeEvent, nodes: this.nodes, node })\n    return node\n  }\n\n  /**\n   * @param nodeId\n   * @returns true if the node is destroyed, false otherwise\n   */\n  destroyNode(nodeId: string): boolean {\n    const node = this.nodes[nodeId]\n    if (node) {\n      // Delete incoming connections\n      if (node.inputPins) {\n        Object.keys(node.inputPins).forEach((pinName) =>\n          this.internalDestroyConnection(buildPinId(nodeId, pinName))\n        )\n      }\n\n      // Delete outgoing connections\n      const outputFormat = this.registry.getNodeTypeInfo(node.type).OutputFormat\n      if (outputFormat) {\n        Object.keys(outputFormat).forEach((pinName) => {\n          this.internalDestroyConnection(buildPinId(nodeId, pinName))\n        })\n      }\n\n      this.nodes = { ...this.nodes }\n      delete this.nodes[nodeId]\n\n      this.issueEvent({\n        type: DeleteNodeEvent,\n        nodes: this.nodes,\n        connections: this.linksByTo,\n        node\n      })\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Iterates over all output connections for a given nodeId\n   * @param nodeId the node to go over outgoing connections\n   * @param callback the function to call for each connection\n   */\n  forNodeOutputConnections(\n    nodeId: string,\n    callback: (nodeId: string, pinName: string, originPin: string) => void\n  ) {\n    const type = this.registry.getNodeTypeInfo(this.nodes[nodeId].type)\n    if (type.OutputFormat) {\n      Object.keys(type.OutputFormat).forEach((key) => {\n        this.linksByFrom[buildPinId(nodeId, key)]?.forEach((c: Connection) => {\n          callback(c.to.node, c.to.pin, c.from.pin)\n        })\n      })\n    }\n  }\n\n  /**\n   * Updates a node, triggers {@link UpdateNodeEvent}\n   * @param id the node id that is changing\n   * @param changes object with patch information\n   */\n  updateNode(id: string, changes: any, eventInfo?: any | ResolverEvent) {\n    const updatedNode: CanvasNode = { ...this.nodes[id], ...changes }\n    this.nodes = { ...this.nodes, [id]: updatedNode }\n    if (eventInfo?.invalidateOutput) {\n      this.invalidateNodeOutput(id)\n    }\n    if (eventInfo?.moveTop) {\n      // Delete key and add it again so it is the \"last\" key\n      delete this.nodes[id]\n      this.nodes[id] = updatedNode\n    }\n\n    this.issueEvent({\n      type: UpdateNodeEvent,\n      nodes: this.nodes,\n      connections: this.linksByTo,\n      node: updatedNode,\n      ...eventInfo\n    })\n  }\n\n  /**\n   * Check if given input pin exists in node graph\n   * @param pinId the pin id to check\n   */\n  isValidInputPin(pinId: string): boolean {\n    const { nodeId, pin } = destructPinId(pinId)\n    if (nodeId in this.nodes) {\n      const input = this.registry.getNodeTypeInfo(this.nodes[nodeId].type)\n        .InputFormat\n      if (input && pin in input) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Check if given output pin id exists in node graph\n   * @param pinId the pin id to check\n   */\n  isValidOutputPin(pinId: string): boolean {\n    const { nodeId, pin } = destructPinId(pinId)\n    if (nodeId in this.nodes) {\n      const output = this.registry.getNodeTypeInfo(this.nodes[nodeId].type)\n        .OutputFormat\n      if (output && pin in output) {\n        return true\n      }\n    }\n    return false\n  }\n\n  /**\n   * Creates a connection between two pins\n   * @param from providing pin\n   * @param to receiving pin\n   * @returns the new connection or false\n   */\n  createPinConnection(from: string, to: string): Connection | false {\n    if (this.createsCycle(from, to)) {\n      return false\n    }\n\n    if (!this.isValidOutputPin(from) || !this.isValidInputPin(to)) {\n      return false\n    }\n\n    this.nodes = { ...this.nodes }\n    this.linksByTo = { ...this.linksByTo }\n    this.linksByFrom = { ...this.linksByFrom }\n    this.internalDestroyConnection(to)\n\n    const receiveing = destructPinId(to)\n    const connection = this.buildNewConnection(\n      from,\n      receiveing.nodeId,\n      receiveing.pin\n    )\n\n    const node = this.nodes[receiveing.nodeId]\n    const updatedNode = {\n      ...node,\n      inputPins: { ...node.inputPins, [receiveing.pin]: from }\n    }\n    this.nodes = { ...this.nodes, [node.id]: updatedNode }\n    const linkFrom = this.linksByFrom[from]\n    if (linkFrom) {\n      linkFrom.push(connection)\n    } else {\n      this.linksByFrom[from] = [connection]\n    }\n    this.linksByTo[to] = connection\n    this.invalidateNodeOutput(receiveing.nodeId)\n    this.issueEvent({\n      type: NewConnectionEvent,\n      nodes: this.nodes,\n      connections: this.linksByTo,\n      connection\n    })\n    return connection\n  }\n\n  /**\n   * @param pinId\n   */\n  private internalDestroyConnection(pinId: string) {\n    if (pinId in this.linksByTo) {\n      const prev = this.linksByTo[pinId]\n      const fromPinId = connToPinId(prev.from)\n      const linksFrom = this.linksByFrom[fromPinId]\n      this.linksByFrom[fromPinId] = linksFrom.filter(\n        (link) => connToPinId(link.to) !== pinId\n      )\n      delete this.linksByTo[connToPinId(prev.to)]\n      this.nodes[prev.to.node].inputPins = {\n        ...this.nodes[prev.to.node].inputPins\n      }\n      delete this.nodes[prev.to.node].inputPins[prev.to.pin]\n    } else if (pinId in this.linksByFrom) {\n      const { nodeId, pin } = destructPinId(pinId)\n      const links = this.linksByFrom[pinId]\n      for (let i = 0; i < links.length; ++i) {\n        const conn = links[i]\n        if (conn.from.node === nodeId && conn.from.pin === pin) {\n          delete this.nodes[conn.to.node].inputPins[conn.to.pin]\n          delete this.linksByTo[connToPinId(conn.to)]\n          this.linksByFrom[pinId] = links.filter((_, j) => j !== i)\n        }\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Resolves a specific node.\n   * @param node the node to be resolved\n   * @returns an object containing relevant information to display the node\n   *          calculated by user provided function. Must be handled accordingly.\n   */\n  abstract resolveNode(node: CanvasNode): any\n\n  //\n\n  private setupNodes(nodes: any) {\n    this.nodes = nodes\n    this.bakeConnections(nodes)\n  }\n\n  private bakeConnections(nodes: any) {\n    this.linksByTo = {}\n    this.linksByFrom = {}\n    if (!nodes) {\n      return false\n    }\n\n    Object.keys(nodes).forEach((nodeId) => {\n      const node = nodes[nodeId]\n      if (node.inputPins) {\n        Object.keys(node.inputPins).forEach((toPinName) => {\n          const toPinId = buildPinId(nodeId, toPinName)\n          const fromPinId = node.inputPins[toPinName]\n          const conn = this.buildNewConnection(fromPinId, nodeId, toPinName)\n          this.linksByTo[toPinId] = conn\n          const fromList = this.linksByFrom[fromPinId]\n          if (fromList) {\n            this.linksByFrom[fromPinId].push(conn)\n          } else {\n            this.linksByFrom[fromPinId] = [conn]\n          }\n        })\n      }\n    })\n    return true\n  }\n\n  /**\n   * Find node ids that connect to the received node\n   * @param node the node to find others connected to it\n   * @returns a set of unique node ids that are connected to the outputs of node\n   */\n  private findOutputConnectedNodes(node: CanvasNode): Set<string> {\n    const uniqueOutputs = new Set<string>()\n\n    const nodeOutputs = this.registry.getNodeTypeInfo(node.type).OutputFormat\n    if (nodeOutputs) {\n      Object.keys(nodeOutputs).forEach((pinName) => {\n        const checkPin = this.linksByFrom[buildPinId(node.id, pinName)]\n        if (checkPin) {\n          checkPin.forEach((link) => {\n            uniqueOutputs.add(link.to.node)\n          })\n        }\n      })\n    }\n    return uniqueOutputs\n  }\n\n  private issueEvent(event: ResolverEvent) {\n    const handlers = this.handlers[event.type]\n    if (handlers) {\n      handlers.forEach((handler: any) => {\n        handler(event)\n      })\n    }\n  }\n\n  private buildNewConnection(\n    fromPinId: string,\n    toNodeId: string,\n    toPinName: string\n  ) {\n    const { nodeId: fromNode, pin: fromPin } = destructPinId(fromPinId)\n\n    return {\n      from: {\n        node: fromNode,\n        pin: fromPin,\n        pinId: fromPinId\n      },\n      to: {\n        node: toNodeId,\n        pin: toPinName,\n        pinId: buildPinId(toNodeId, toPinName)\n      }\n    }\n  }\n\n  createsCycle(from: string, to: string) {\n    const visited = new Set()\n    const tocheck: string[] = []\n\n    const { nodeId } = destructPinId(from)\n    visited.add(nodeId)\n\n    {\n      const { nodeId } = destructPinId(to)\n      tocheck.push(nodeId)\n    }\n\n    do {\n      const next = tocheck.pop()\n      if (visited.has(next)) {\n        return true\n      }\n      visited.add(next)\n\n      const otherNodes = this.findOutputConnectedNodes(this.nodes[next!])\n      tocheck.push(...Array.from(otherNodes))\n    } while (tocheck.length > 0)\n\n    return false\n  }\n}\n","import React from 'react'\n\n/**\n * Represents a connection in the canvas\n * @param {startPoint, endPoint} the start/end positions for the connector in canvas space.\n */\nexport default function Connector({\n  startPoint,\n  endPoint\n}: {\n  startPoint: number[]\n  endPoint: number[]\n}) {\n  // const startPoint = [25, 25];\n  // const endPoint = [25, 325];\n\n  const firstControlPoint = [startPoint[0] + 90, startPoint[1]]\n  const secondControlPoint = [endPoint[0] - 90, endPoint[1]]\n\n  const instructions = `\n        M ${startPoint}\n        C ${firstControlPoint}\n        ${secondControlPoint}\n        ${endPoint}\n    `\n\n  return <path d={instructions} className='node-link' />\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return this.children;\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport array from \"../array.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = array(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import sourceEvent from \"./sourceEvent.js\";\n\nexport default function(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n","export default function(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    var group = select.apply(this, arguments);\n    return group == null ? [] : array(group);\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(selection) {\n  if (!(selection instanceof Selection)) throw new Error(\"invalid merge\");\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","export default x => () => x;\n","import React from 'react'\nimport { useDrop, useDrag, DragObjectWithType } from 'react-dnd'\nimport { buildPinId } from '../core/utils'\nimport { NodeResolver } from '../core/NodeResolver'\nimport { LinkDataType } from '../core/NodeRegistry'\n\nenum ItemTypes {\n  FROM_OUTPUT = \"CN_FROM_OUTPUT\",\n  FROM_INPUT = \"CN_FROM_INPUT\",\n}\n\nexport interface PinDropItem {\n  type: ItemTypes\n  [key: string]: any\n}\n\ninterface OutputPinProps {\n  nodeId: string\n  name: string\n  visualName?: string\n  dataType: LinkDataType\n  resolver: NodeResolver\n}\n\nexport interface PinDropItem extends DragObjectWithType {\n  dataType: LinkDataType\n  pinId: string\n}\n\n\nfunction canDrop(type: LinkDataType, expected: LinkDataType,\n  resolver: NodeResolver, fromPin: string, toPin: string): boolean {\n  if (fromPin === toPin) {\n    return false;\n  }\n  if (resolver.createsCycle(fromPin, toPin)) {\n    return false;\n  }\n\n  if (expected === 'any') {\n    return true;\n  } else if (Array.isArray(expected)) {\n    if (Array.isArray(type)) {\n      for (let x = 0; x < expected.length; ++x) {\n        if (type.indexOf(expected[x]) >= 0) {\n          return true;\n        }\n      }\n      return false;\n    } else {\n      return expected.includes(type)\n    }\n  } else if (Array.isArray(type)) {\n    return type.includes(expected)\n  } else {\n    return expected === type\n  }\n}\n\nexport function OutputPin({\n  nodeId,\n  name,\n  visualName,\n  dataType,\n  resolver\n}: OutputPinProps) {\n  const pinId = buildPinId(nodeId, name)\n\n  const [{ dragging }, dragRef] = useDrag<PinDropItem, any, any>({\n    item: { type: ItemTypes.FROM_OUTPUT, dataType: dataType, pinId: pinId },\n    collect: (monitor: any) => ({\n      dragging: monitor.isDragging()\n    })\n  })\n\n  const [, drop] = useDrop<PinDropItem, any, any>({\n    accept: ItemTypes.FROM_INPUT,\n    canDrop: (e, _monitor) => canDrop(dataType, e.dataType, resolver, pinId, e.pinId),\n    drop: (e: any) => { return { connection: resolver.createPinConnection(pinId, e.pinId) } },\n    collect: (monitor: any) => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop(),\n      clientOffset: monitor.getClientOffset()\n    })\n  })\n\n  const activeClasses = dragging ? 'pin dragging node-noglobals' : 'pin node-noglobals'\n  const hideName = !visualName || visualName === ''\n  const pinElement = dragRef(drop(<div id={pinId} className={activeClasses} />))\n\n  return (\n    <div className='output-pin'>\n      {hideName ? null : <span>{name}</span>}\n      {pinElement}\n    </div>\n  )\n}\n\ninterface InputPinProps {\n  nodeId: string\n  name: string\n  visualName?: string\n  dataType: LinkDataType\n  error: boolean\n  resolver: NodeResolver\n}\n\n/**\n * A generic input pin\n * @param param0\n */\nexport function InputPin({\n  nodeId,\n  name,\n  visualName,\n  dataType,\n  error,\n  resolver\n}: InputPinProps) {\n  const pinId = buildPinId(nodeId, name)\n  const [, drop] = useDrop<PinDropItem, any, any>({\n    accept: ItemTypes.FROM_OUTPUT,\n    canDrop: (e, _monitor) => canDrop(e.dataType, dataType, resolver, e.pinId, pinId),\n    drop: (e: any) => { return { connection: resolver.createPinConnection(e.pinId, pinId) } },\n    collect: (monitor: any) => ({\n      isOver: !!monitor.isOver(),\n      canDrop: !!monitor.canDrop(),\n      clientOffset: monitor.getClientOffset()\n    })\n  })\n\n  const [{ }, dragRef] = useDrag<PinDropItem, any, any>({\n    item: { type: ItemTypes.FROM_INPUT, dataType: dataType, pinId: pinId },\n    collect: (monitor: any) => ({\n      dragging: monitor.isDragging()\n    })\n  })\n\n  const classes = `pin node-noglobals ${error ? 'error' : ''}`\n\n  const displayName = visualName === undefined ? name : visualName\n  const pinElement = dragRef(drop(<div id={pinId} className={classes} />))\n\n  return (\n    <div className='input-pin'>\n      {pinElement}\n      <span>{displayName}</span>\n    </div>\n  )\n}\n","export default function DragEvent(type, {\n  sourceEvent,\n  subject,\n  target,\n  identifier,\n  active,\n  x, y, dx, dy,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    subject: {value: subject, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    identifier: {value: identifier, enumerable: true, configurable: true},\n    active: {value: active, enumerable: true, configurable: true},\n    x: {value: x, enumerable: true, configurable: true},\n    y: {value: y, enumerable: true, configurable: true},\n    dx: {value: dx, enumerable: true, configurable: true},\n    dy: {value: dy, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {select, pointer} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\nimport constant from \"./constant.js\";\nimport DragEvent from \"./event.js\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(event, d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned(event, d) {\n    if (touchending || !filter.call(this, event, d)) return;\n    var gesture = beforestart(this, container.call(this, event, d), event, d, \"mouse\");\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation(event);\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\", event);\n  }\n\n  function mousemoved(event) {\n    noevent(event);\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\", event);\n  }\n\n  function mouseupped(event) {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent(event);\n    gestures.mouse(\"end\", event);\n  }\n\n  function touchstarted(event, d) {\n    if (!filter.call(this, event, d)) return;\n    var touches = event.changedTouches,\n        c = container.call(this, event, d),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {\n        nopropagation(event);\n        gesture(\"start\", event, touches[i]);\n      }\n    }\n  }\n\n  function touchmoved(event) {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent(event);\n        gesture(\"drag\", event, touches[i]);\n      }\n    }\n  }\n\n  function touchended(event) {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation(event);\n        gesture(\"end\", event, touches[i]);\n      }\n    }\n  }\n\n  function beforestart(that, container, event, d, identifier, touch) {\n    var dispatch = listeners.copy(),\n        p = pointer(touch || event, container), dx, dy,\n        s;\n\n    if ((s = subject.call(that, new DragEvent(\"beforestart\", {\n        sourceEvent: event,\n        target: drag,\n        identifier,\n        active,\n        x: p[0],\n        y: p[1],\n        dx: 0,\n        dy: 0,\n        dispatch\n      }), d)) == null) return;\n\n    dx = s.x - p[0] || 0;\n    dy = s.y - p[1] || 0;\n\n    return function gesture(type, event, touch) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[identifier] = gesture, n = active++; break;\n        case \"end\": delete gestures[identifier], --active; // nobreak\n        case \"drag\": p = pointer(touch || event, container), n = active; break;\n      }\n      dispatch.call(\n        type,\n        that,\n        new DragEvent(type, {\n          sourceEvent: event,\n          subject: s,\n          target: drag,\n          identifier,\n          active: n,\n          x: p[0] + dx,\n          y: p[1] + dy,\n          dx: p[0] - p0[0],\n          dy: p[1] - p0[1],\n          dispatch\n        }),\n        d\n      );\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent.js\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","import React, { ReactNode } from 'react'\n\nimport { CanvasNode } from '../core/CanvasNode'\nimport { InputFormat } from '../core/NodeRegistry'\nimport { NodeResolver } from '../core/NodeResolver'\nimport { snapped, shouldAllowInputEvent } from '../core/utils'\n\nimport { drag as d3drag } from 'd3-drag'\nimport { select as d3select } from 'd3-selection'\nimport { InputPin, OutputPin } from './Pin'\n\nexport interface PinData {\n  [key: string]: any\n}\n\nexport interface BaseNodeProps extends CanvasNode {\n  minWidth?: number\n  minHeight?: number\n  data?: PinData\n  error?: boolean\n  children: ReactNode\n  title: string\n\n  resolver?: NodeResolver\n  input?: InputFormat\n  output?: InputFormat\n}\n\n/**\n * A Base node.\n * Provides dragging functionallity and basic layout\n */\nexport class BaseNode extends React.Component<BaseNodeProps, any> {\n  dragArea: any\n  resize: any\n  inputPinChangeHandler: any\n  coords: any\n  onResize?: { (width: number): void }\n\n  static readonly MIN_WIDTH = 160\n  static readonly MIN_HEIGHT = 96\n\n  constructor(props: BaseNodeProps) {\n    super(props)\n    this.state = {}\n\n    this.dragArea = React.createRef()\n    this.resize = React.createRef()\n    this.inputPinChangeHandler = {}\n\n    this.destroyNode = this.destroyNode.bind(this)\n  }\n\n  destroyNode() {\n    this.props.resolver?.destroyNode(this.props.id)\n  }\n\n  pinChangedAndIsValid(pin: string, before: any, after: any) {\n    const afterPin = after.inputPins[pin]\n    return before.inputPins[pin] !== afterPin && afterPin\n  }\n\n  componentDidUpdate() {\n    const { x, y, width, height } = this.props\n    d3select(this.dragArea.current).data([\n      {\n        x,\n        y\n      }\n    ])\n    d3select(this.resize.current).data([\n      {\n        x,\n        y,\n        width,\n        height,\n        minW: this.props.minWidth || BaseNode.MIN_WIDTH,\n        minH: this.props.minHeight || BaseNode.MIN_HEIGHT\n      }\n    ])\n  }\n\n  registerForDragging(element: SVGForeignObjectElement) {\n    const that = this\n\n    function dragstarted(event: any, d: any) {\n      d.x = event.x\n      d.y = event.y\n    }\n\n    function dragged(event: any, d: any) {\n      d.x = event.x\n      d.y = event.y\n      d3select(that.dragArea.current.parentNode)\n        .attr('x', snapped(d.x))\n        .attr('y', snapped(d.y))\n      that.props.resolver!.updateNode(\n        that.props.id,\n        { x: snapped(d.x), y: snapped(d.y) },\n        { nohistory: true, moveTop: true }\n      )\n    }\n\n    function dragended(this: any, event: any, d: any) {\n      d.x = event.x\n      d.y = event.y\n      d3select(that.dragArea.current.parentNode)\n        .attr('x', snapped(d.x))\n        .attr('y', snapped(d.y))\n      if (that.props.x !== d.x || that.props.y !== d.y) {\n        that.props.resolver!.updateNode(that.props.id, {\n          x: snapped(d.x),\n          y: snapped(d.y)\n        })\n      }\n    }\n\n    const dragCall = d3drag<SVGForeignObjectElement, any>()\n      .filter((event: any) => shouldAllowInputEvent(event.target))\n      .on('start', dragstarted)\n      .on('drag', dragged)\n      .on('end', dragended)\n\n    const { x, y } = this.props\n    d3select(element)\n      .data([\n        {\n          x,\n          y\n        }\n      ])\n      .call(dragCall)\n  }\n\n  registerForResize(element: any) {\n    const that = this\n\n    function resizeStarted(event: any, d: any) {\n      d.rx = event.x\n      d.ry = event.y\n      d.startW = d.width\n      d.startH = d.height\n    }\n\n    function resized(event: any, d: any) {\n      d.width = snapped(Math.max(d.startW + event.x - d.rx, d.minW))\n      d.height = snapped(Math.max(d.startH + event.y - d.ry, d.minH))\n\n      d3select(that.dragArea.current.parentNode)\n        .attr('width', d.width)\n        .attr('height', d.height)\n      that.props.resolver!.updateNode(\n        that.props.id,\n        { width: d.width, height: d.height },\n        { nohistory: true }\n      )\n    }\n\n    function resizeEnded(this: any, event: any, d: any) {\n      d.width = snapped(Math.max(d.startW + event.x - d.rx, d.minW))\n      d.height = snapped(Math.max(d.startH + event.y - d.ry, d.minH))\n\n      d3select(that.dragArea.current.parentNode)\n        .attr('width', d.width)\n        .attr('height', d.height)\n      if (that.props.width !== d.width || that.props.height !== d.height) {\n        that.props.resolver!.updateNode(that.props.id, {\n          width: d.width,\n          height: d.height\n        })\n      }\n    }\n\n    const dragResize = d3drag<SVGForeignObjectElement, any>()\n      .filter((event: any) => shouldAllowInputEvent(event.target))\n      .on('start', resizeStarted)\n      .on('drag', resized)\n      .on('end', resizeEnded)\n\n    const { x, y, width, height } = this.props\n    d3select(element)\n      .data([\n        {\n          x,\n          y,\n          width,\n          height,\n          minW: this.props.minWidth || BaseNode.MIN_WIDTH,\n          minH: this.props.minHeight || BaseNode.MIN_HEIGHT\n        }\n      ])\n      .call(dragResize)\n  }\n\n  componentDidMount() {\n    this.registerForDragging(this.dragArea.current)\n    this.registerForResize(this.resize.current)\n  }\n\n  render() {\n    const { x, y } = this.props\n    const hasError = this.props.error\n\n    const inputPins = this.props.input\n      ? Object.entries(this.props.input).map(([key, value]) => {\n          return (\n            <InputPin\n              error={false}\n              dataType={value.type}\n              resolver={this.props.resolver!}\n              key={key}\n              nodeId={this.props.id}\n              name={key}\n              visualName={value.visualName}\n            />\n          )\n        })\n      : null\n\n    const outputPins = this.props.output\n      ? Object.entries(this.props.output).map(([key, value]) => {\n          return (\n            <OutputPin\n              dataType={value.type}\n              key={key}\n              nodeId={this.props.id}\n              name={key}\n              visualName={value.visualName}\n              resolver={this.props.resolver!}\n            />\n          )\n        })\n      : null\n\n    const width = Math.max(\n      this.props.minWidth || BaseNode.MIN_WIDTH,\n      this.props.width\n    )\n\n    const height = Math.max(\n      this.props.minHeight || BaseNode.MIN_HEIGHT,\n      this.props.height\n    )\n\n    return (\n      <foreignObject\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        className='embedded-node'\n      >\n        <div\n          ref={this.dragArea}\n          title={this.props.title}\n          className={`node ${hasError ? 'error' : ''}`}\n        >\n          <div className='main-node node-drag'>\n            <div className='node-remove'>\n              <span role='img' aria-label='delete' onClick={this.destroyNode}>\n                🗑️\n              </span>\n            </div>\n            <div className='header'>\n              <div className='node-drag'>\n                <span>{this.props.title}</span>\n                <hr />\n              </div>\n            </div>\n\n            <div className='node-body'>\n              {this.props.input ? (\n                <div className='ignore-mouse inputs'>{inputPins}</div>\n              ) : null}\n\n              <div\n                className='contents node-noglobals'\n                style={{ maxHeight: this.props.height - 20 - 45 }}\n              >\n                {this.props.children}\n              </div>\n\n              {this.props.output ? (\n                <div className='outputs'>{outputPins}</div>\n              ) : null}\n            </div>\n          </div>\n          <div className='resize' ref={this.resize}>\n            ᒧ\n          </div>\n        </div>\n      </foreignObject>\n    )\n  }\n}\n","import React from 'react'\nimport { ItemTypes } from '../core/Constants'\nimport { useDrop, XYCoord } from 'react-dnd'\nimport Connector from './Connector'\n\nimport * as d3 from 'd3'\n\nimport {\n  ConnectionMap,\n  NodeResolver,\n  NodeMap,\n  NewNodeEvent,\n  UpdateNodeEvent,\n  NewConnectionEvent,\n  DeleteNodeEvent,\n  ResolverEvent\n} from '../core/NodeResolver'\nimport { connToPinId } from '../core/CanvasNode'\nimport { screenToSvg, snapped, shouldAllowInputEvent } from '../core'\n\ninterface SvgCanvasProps {\n  children: React.ReactNode\n  canvas: Canvas\n}\n\ninterface CanvasDropItem {\n  type: ItemTypes\n  [key: string]: any\n}\n\n/**\n * SVG Canvas with drop event handling\n */\nfunction SvgCanvas({ canvas, children }: SvgCanvasProps) {\n  const [{ isOver }, ref] = useDrop({\n    accept: [ItemTypes.VISUAL_NODE],\n    drop: (e: CanvasDropItem, monitor: any) => {\n      canvas.variableDropped(e, monitor.getClientOffset()!)\n    },\n    collect: (monitor: any) => ({\n      isOver: !!monitor.isOver(),\n      clientOffset: monitor.getClientOffset()\n    })\n  })\n\n  return (\n    <svg ref={ref} id='canvas' width='100%' height='100vh'>\n      {isOver ? (\n        <text x={20} y={20}>\n          Drop to create node!\n        </text>\n      ) : null}\n      {children}\n    </svg>\n  )\n}\n\ninterface OwnProps {\n  resolver: NodeResolver\n}\ninterface State {\n  nodes: NodeMap\n  connections: ConnectionMap\n}\ninterface Transform {\n  x: number\n  y: number\n  zoom: number\n}\n\ninterface UndoEntry {\n  data: NodeMap\n  description: string\n}\n\n/**\n * Canvas responsible to render the nodes and links\n * Will listen to events from {@link NodeResolver}\n */\nexport class Canvas extends React.Component<OwnProps, State> {\n  transform: Transform\n  mainGroup: React.RefObject<SVGGElement>\n  dragG: React.RefObject<SVGGElement>\n  shouldRenderConnections = false\n  undo: UndoEntry[]\n  undoIndex: number\n\n  /**\n   * @param props @see {@link OwnProps} for details\n   */\n  constructor(props: OwnProps) {\n    super(props)\n\n    this.state = {\n      nodes: props.resolver.getNodes(),\n      connections: props.resolver.getConnections()\n    }\n\n    this.undo = [{ data: this.state.nodes, description: 'Start' }]\n    this.undoIndex = 0\n    this.variableDropped = this.variableDropped.bind(this)\n    this.mainGroup = React.createRef<SVGGElement>()\n    this.dragG = React.createRef<SVGGElement>()\n    this.transform = { x: 0, y: 0, zoom: 1 }\n\n    this.resolverStateChanged = this.resolverStateChanged.bind(this)\n  }\n\n  variableDropped(e: CanvasDropItem, offset: XYCoord) {\n    const p = this.svgPoint(offset.x, offset.y)\n    this.props.resolver.createNode(e.nodeType, {\n      x: snapped(p[0]),\n      y: snapped(p[1]),\n      ...e\n    })\n  }\n\n  svgPoint(x: number, y: number) {\n    if (this.mainGroup.current !== null) {\n      const svg: SVGSVGElement = this.mainGroup.current.closest(\n        'svg'\n      ) as SVGSVGElement\n      return screenToSvg(svg, this.mainGroup.current, x, y)\n    }\n    throw new Error('Invalid G group')\n  }\n\n  renderConnections() {\n    const PIN_HSIZE = 20 / 2\n    const VISUAL_OFFSET = PIN_HSIZE * this.transform.zoom\n\n    const connections = Object.entries(this.state.connections)\n    const list: any[] = []\n    connections.forEach(([id, connection]) => {\n      // TODO: Consider going through element id only once to avoid multiple getBoundingClientRect on same element?\n      const bA = document\n        .getElementById(connToPinId(connection.from))\n        ?.getBoundingClientRect()\n      const bB = document\n        .getElementById(connToPinId(connection.to))\n        ?.getBoundingClientRect()\n      if (!bA) {\n        console.warn(\n          `Bad pin connection: From: ${connToPinId(connection.from)} missing`\n        )\n        return\n      }\n      if (!bB) {\n        console.warn(\n          `Bad pin connection: To: ${connToPinId(connection.to)} missing`\n        )\n        return\n      }\n\n      const posA = this.svgPoint(bA.x + VISUAL_OFFSET, bA.y + VISUAL_OFFSET)\n      const posB = this.svgPoint(bB.x + VISUAL_OFFSET, bB.y + VISUAL_OFFSET)\n\n      list.push(<Connector key={id} startPoint={posA} endPoint={posB} />)\n    })\n    return list\n  }\n\n  renderNodes() {\n    const entries = Object.entries(this.state.nodes)\n    const a = Array.from(entries, ([id, node]) => {\n      return (\n        <React.Fragment key={id}>\n          {this.props.resolver.render(node)}\n        </React.Fragment>\n      )\n    })\n    return a\n  }\n\n  resolverStateChanged(event: ResolverEvent) {\n    if (event.nodes && !event.nohistory) {\n      this.saveNodeHistory(event.nodes)\n    }\n\n    this.setState({\n      nodes: event.nodes ? event.nodes : this.state.nodes,\n      connections: event.connections\n        ? event.connections\n        : this.state.connections\n    })\n  }\n\n  saveNodeHistory(nodes: any) {\n    // Clear future history\n    this.undo = this.undo.slice(0, this.undoIndex + 1)\n\n    // Save new history\n    const undodata = { data: nodes, description: 'state?' }\n    this.undo.push(undodata)\n    this.undoIndex++\n  }\n\n  redoOnce() {\n    if (this.undoIndex + 1 < this.undo.length) {\n      this.undoIndex++\n      this.useFromHistory()\n    }\n  }\n\n  useFromHistory() {\n    const nodes = this.undo[this.undoIndex]\n    this.props.resolver.restoreNodes(nodes.data)\n    this.setState({\n      nodes: this.props.resolver.getNodes(),\n      connections: this.props.resolver.getConnections()\n    })\n  }\n\n  undoOnce() {\n    if (this.undoIndex !== 0) {\n      this.undoIndex--\n      this.useFromHistory()\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.resolver.unbind(NewNodeEvent, this.resolverStateChanged)\n    this.props.resolver.unbind(UpdateNodeEvent, this.resolverStateChanged)\n    this.props.resolver.unbind(DeleteNodeEvent, this.resolverStateChanged)\n    this.props.resolver.unbind(NewConnectionEvent, this.resolverStateChanged)\n  }\n\n  componentDidMount() {\n    this.props.resolver.on(NewNodeEvent, this.resolverStateChanged)\n    this.props.resolver.on(UpdateNodeEvent, this.resolverStateChanged)\n    this.props.resolver.on(DeleteNodeEvent, this.resolverStateChanged)\n    this.props.resolver.on(NewConnectionEvent, this.resolverStateChanged)\n\n    if (this.mainGroup.current && this.dragG.current) {\n      const that = this\n      const g = d3.select(this.mainGroup.current)\n      d3.select(this.dragG.current).call(\n        d3\n          .zoom<SVGGElement, any>()\n          .filter((event : any) => shouldAllowInputEvent(event.target))\n          .on('zoom', function (event: any) {\n            that.transform = {\n              x: event.transform.x,\n              y: event.transform.y,\n              zoom: event.transform.k\n            }\n            g.attr('transform', event.transform)\n          })\n      )\n\n      // Force update because the links can only be rendered\n      // after node pins are in the dom, thus we re-render\n      // so that connections components are actually displayed\n      setTimeout(() => {\n        this.shouldRenderConnections = true\n        this.forceUpdate()\n      }, 50)\n    }\n  }\n\n  componentDidUpdate(_prevProps: OwnProps, prevState: State) {\n    if (this.state.connections !== prevState.connections) {\n      this.shouldRenderConnections = false\n      setTimeout(() => {\n        this.shouldRenderConnections = true\n        this.forceUpdate()\n      }, 10)\n    }\n  }\n\n  render() {\n    return (\n      <SvgCanvas canvas={this}>\n        <g ref={this.dragG}>\n          <rect\n            x='0'\n            y='0'\n            width='100%'\n            height='100%'\n            fill='white'\n            style={{ visibility: 'hidden', pointerEvents: 'all' }}\n          />\n          <g ref={this.mainGroup} transform='translate(0,0) scale(1)'>\n            {this.shouldRenderConnections ? this.renderConnections() : null}\n            <g>{this.renderNodes()}</g>\n          </g>\n        </g>\n      </SvgCanvas>\n    )\n  }\n}\n","import { CanvasNode } from \"compute-nodes\";\n\nexport default class NumberInputNode extends CanvasNode {\n    static Type = \"InputVariable\";\n    static Name = \"Input Variable\"\n\n    data: {\n        value: any,\n        name: string,\n    };\n\n    static MinDimensions = {\n        height: 14 * 8\n    }\n\n    static outValue = \"value\";\n    static InputFormat = undefined;\n    static OutputFormat = {\n        [NumberInputNode.outValue]: {\n            type: 'number',\n            visualName: ''\n        }\n    }\n\n    constructor(args: any) {\n        super(args);\n        this.data = {\n            value: 0,\n            name: \"\"\n        };\n    }\n\n    static Construct = (args: any) => {\n        return new NumberInputNode(args);\n    }\n    static LocalResolve = (node: NumberInputNode, input: any) => {\n        return { [NumberInputNode.outValue]: node.data.value };\n    }\n}","import { CanvasNode } from \"compute-nodes\";\r\n\r\nexport default class SumValuesNode extends CanvasNode {\r\n    static Type = \"SumNumbers\";\r\n    static Name = \"Sum\"\r\n\r\n    static MinDimensions = {\r\n        height: 17 * 8,\r\n        width: 35 * 8\r\n    }\r\n\r\n    static readonly inA: string = 'a';\r\n    static readonly inB: string = 'b';\r\n    static InputFormat = {\r\n        [SumValuesNode.inA]: {\r\n            type: ['number', 'number[]'],\r\n            visualName: \"A\",\r\n        },\r\n        [SumValuesNode.inB]: {\r\n            type: ['number', 'number[]'],\r\n            visualName: \"B\",\r\n        }\r\n    }\r\n\r\n    static readonly outSum: string = 'sum';\r\n    static OutputFormat = {\r\n        [SumValuesNode.outSum]: {\r\n            type: ['number', 'number[]'],\r\n        },\r\n    }\r\n\r\n    static Construct = (args: any): CanvasNode => {\r\n        return new SumValuesNode(args);\r\n    }\r\n\r\n    static LocalResolve = (node: SumValuesNode, { a, b }: any) => {\r\n        const operation = fetchOperator(node.data?.op || \"+\")\r\n\r\n        if (Array.isArray(a)) {\r\n            if (Array.isArray(b)) {\r\n                if (a.length !== b.length) {\r\n                    return {\r\n                        error: \"Input size do not match!\"\r\n                    }\r\n                }\r\n                return sumArrays(a, b, operation);\r\n            }\r\n            else {\r\n                return sumNumberToArray(a, b, operation);\r\n            }\r\n        } else if (Array.isArray(b)) {\r\n            return sumNumberToArray(b, a, operation);\r\n        } else {\r\n            return {\r\n                [SumValuesNode.outSum]: operation!(+a, +b),\r\n            };\r\n        }\r\n    }\r\n\r\n    data = {\r\n        op: \"+\",\r\n    }\r\n}\r\n\r\nfunction operatorPlus(a: number, b: number) {\r\n    return a + b;\r\n}\r\nfunction operatorSubtract(a: number, b: number) {\r\n    return a - b;\r\n}\r\nfunction operatorMultiply(a: number, b: number) {\r\n    return a * b;\r\n}\r\nfunction operatorDivide(a: number, b: number) {\r\n    return a / b;\r\n}\r\nfunction operatorPow(a: number, b: number) {\r\n    return a ** b;\r\n}\r\n\r\nfunction fetchOperator(op: string) {\r\n    switch (op) {\r\n        case '+':\r\n            return operatorPlus;\r\n        case '-':\r\n            return operatorSubtract;\r\n        case '*':\r\n            return operatorMultiply;\r\n        case '/':\r\n            return operatorDivide;\r\n        case 'pow':\r\n            return operatorPow;\r\n    }\r\n}\r\n\r\nfunction sumArrays(a: number[], b: number[], operator: any) {\r\n    const sum: number[] = []\r\n    a.forEach((x, i) => sum.push(operator(+x, +b[i])))\r\n    return {\r\n        [SumValuesNode.outSum]: sum\r\n    }\r\n}\r\n\r\nfunction sumNumberToArray(a: number[], b: number, operator: any) {\r\n    const sum: number[] = []\r\n    a.forEach((x, i) => sum.push(operator(+x, +b)))\r\n    return {\r\n        [SumValuesNode.outSum]: sum\r\n    }\r\n}","import { CanvasNode } from \"compute-nodes\";\r\n\r\nexport default class ScatterPlotNode extends CanvasNode {\r\n    static Type = \"ScatterPlotGraph\";\r\n    static Name = \"Scatter Plot\"\r\n\r\n    static InputFormat = {\r\n        x: {\r\n            type: \"number[]\",\r\n        },\r\n        y: {\r\n            type: \"number[]\"\r\n        }\r\n    }\r\n    static MinDimensions = {\r\n        height: 15 * 8\r\n    }\r\n\r\n\r\n    static OutputFormat = undefined;\r\n\r\n    static Construct = (args: any) => {\r\n        return new ScatterPlotNode(args);\r\n    }\r\n    static LocalResolve = (node: any, input: any) => {\r\n        return input;\r\n    }\r\n}","import React, { Component } from 'react';\nimport SumValuesNode from '../SumValuesNode';\nimport { BaseNode, NodeResolver } from 'compute-nodes';\nimport { DropdownButton, Dropdown } from 'react-bootstrap';\n\ninterface OwnProps extends SumValuesNode {\n    resolvedData: {\n        sum: string\n    }\n    resolver: NodeResolver\n    data: any\n}\n\ninterface DispatchProps {\n}\n\ntype Props = OwnProps & DispatchProps;\n\nexport default class SumValuesGraphNode extends Component<Props> {\n    render() {\n        return (<BaseNode title={\"Sum Values\"} {...this.props}\n            input={SumValuesNode.InputFormat} output={SumValuesNode.OutputFormat}>\n            <div>\n                <DropdownButton id=\"dropdown-basic-button\" title={\"Operation: \" + this.props.data?.op} className=\"gn-node-dropdown\">\n                    <Dropdown.Item as=\"button\" onClick={() => this.props.resolver.updateNode(this.props.id, { data: { op: \"+\" } }, { invalidateOutput: true })}>Sum</Dropdown.Item>\n                    <Dropdown.Item as=\"button\" onClick={() => this.props.resolver.updateNode(this.props.id, { data: { op: \"-\" } }, { invalidateOutput: true })}>Subtract</Dropdown.Item>\n                    <Dropdown.Item as=\"button\" onClick={() => this.props.resolver.updateNode(this.props.id, { data: { op: \"*\" } }, { invalidateOutput: true })}>Multiply</Dropdown.Item>\n                    <Dropdown.Item as=\"button\" onClick={() => this.props.resolver.updateNode(this.props.id, { data: { op: \"/\" } }, { invalidateOutput: true })}>Divide</Dropdown.Item>\n                    <Dropdown.Item as=\"button\" onClick={() => this.props.resolver.updateNode(this.props.id, { data: { op: \"pow\" } }, { invalidateOutput: true })}>Power</Dropdown.Item>\n                </DropdownButton>\n            </div>\n            <div style={{ overflow: \"auto\" }}>\n                <span className=\"node-noglobals\">{Array.isArray(this.props.resolvedData.sum) ?\n                    'Computed over ' + this.props.resolvedData.sum.length + ' elements' :\n                    '' + this.props.resolvedData.sum}</span>\n            </div>\n        </BaseNode>);\n    }\n}","\r\nimport { CanvasNode, NodeRegistry, NodeResolver, InputFormat, buildPinId, destructPinId } from 'compute-nodes';\r\n\r\nexport interface LocalNodeDefinition {\r\n    LocalResolve(node: CanvasNode, input: any): any;\r\n}\r\n\r\nexport class LocalNodeRegistry extends NodeRegistry<LocalNodeDefinition> {\r\n    localResolve(node: CanvasNode, input: any) {\r\n        return this.getNodeTypeInfo(node.type).LocalResolve(node, input);\r\n    }\r\n}\r\n\r\nexport class LocalNodeResolver extends NodeResolver<LocalNodeRegistry> {\r\n    pinData: any;\r\n    resolvedNodes: any;\r\n\r\n    constructor(registry: LocalNodeRegistry, nodes?: any) {\r\n        super(registry, nodes);\r\n        this.pinData = {};\r\n        this.resolvedNodes = {};\r\n    }\r\n\r\n    /**\r\n     * Resolves a specific node.\r\n     * @param node the node to be resolved\r\n     * @returns an object containing relevant information to display the node\r\n     *          calculated by user provided function. Must be handled accordingly.\r\n     */\r\n    resolveNode(node: CanvasNode) {\r\n        if (node.id in this.resolvedNodes) {\r\n            return this.resolvedNodes[node.id]\r\n        } else {\r\n            const typeDef = this.registry.getNodeTypeInfo(node.type)\r\n            const inputData = this.resolveNodeInputs(node, typeDef.InputFormat)\r\n            const outputs = this.resolveNodeOutputs(node, inputData)\r\n            this.resolvedNodes[node.id] = outputs\r\n            return outputs\r\n        }\r\n    }\r\n\r\n    invalidateNodeOutput(nodeId: string): void {\r\n        if (nodeId in this.resolvedNodes) {\r\n            delete this.resolvedNodes[nodeId]\r\n            this.forNodeOutputConnections(nodeId, (subNodeId: string, pinName: string, fromPin: string) => {\r\n                this.invalidateNodeOutput(subNodeId);\r\n                delete this.pinData[buildPinId(nodeId, fromPin)]\r\n            })\r\n        }\r\n    }\r\n\r\n    resolvePinData(pinId: string) {\r\n        if (pinId in this.pinData) {\r\n            return this.pinData[pinId];\r\n        } else {\r\n            const { nodeId, pin } = destructPinId(pinId);\r\n            if (nodeId in this.nodes) {\r\n                return this.resolveNode(this.nodes[nodeId])[pin];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    setPinData(pinId: string, data: any) {\r\n        this.pinData[pinId] = data;\r\n    }\r\n\r\n    resolveNodeInputs(node: CanvasNode, inputFormat?: InputFormat) {\r\n        if (!inputFormat) {\r\n            return undefined;\r\n        }\r\n        const data: any = {};\r\n        Object.keys(inputFormat).forEach((key: string) => {\r\n            const pinId = node.inputPins[key];\r\n            if (pinId) {\r\n                data[key] = this.resolvePinData(pinId);\r\n            }\r\n        });\r\n        return data;\r\n    }\r\n\r\n    resolveNodeOutputs(node: CanvasNode, inputData: any) {\r\n        const data = this.registry.localResolve(node, inputData);\r\n        return data;\r\n    }\r\n}","import { CanvasNode } from \"compute-nodes\";\n\nexport interface DataFormat {\n    A: any\n}\n\n/**\n * This component doesn't have any special data states\n */\nexport class DataPreviewNode {\n    static Type = \"DataPreview\";\n    static Name = \"Data Preview\"\n\n    static InputFormat = {\n        a: {\n            type: 'any',\n            visualName: '',\n        }\n    }\n    static OutputFormat = undefined;\n\n    static Construct = (args: any) =>{\n        return new CanvasNode(args);\n    }\n    static LocalResolve = (args: any, input: any) => {\n        return input;\n    }\n}","import React, { Component } from 'react';\r\n\r\nimport { BaseNode } from 'compute-nodes';\r\nimport ScatterPlotNode from '../ScatterPlotNode';\r\n\r\nimport * as d3 from 'd3';\r\n\r\n\r\ninterface DataEntry {\r\n    x: number;\r\n    y: number;\r\n}\r\ninterface OwnProps {\r\n    resolvedData: { x: number[], y: number[] }\r\n}\r\n\r\ntype Props = OwnProps & ScatterPlotNode;\r\n\r\nexport class ScatterPlotGraphNode extends Component<Props> {\r\n\r\n    graph: any;\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    buildgraph(x: number[] | undefined, y: number[] | undefined) {\r\n        if (!!!x || !!!y) {\r\n            return null;\r\n        }\r\n\r\n        console.assert(x.length === y.length);\r\n\r\n        const useData: DataEntry[] = x.map((value: any, i: number) => {\r\n            return { x: value, y: y[i] }\r\n        });\r\n\r\n        const area = { width: 100, height: 100 };//svg.getBoundingClientRect();\r\n\r\n        const elemSize = 5;\r\n        const scaleX = d3.scaleLinear().range([0 + elemSize, area.width - elemSize]).domain(d3.extent(useData, (d: DataEntry) => d.x) as [number, number]);\r\n        const scaleY = d3.scaleLinear().range([area.height - elemSize, 0 + elemSize]).domain(d3.extent(useData, (d: DataEntry) => d.y) as [number, number]);\r\n\r\n        return useData.map((xy: DataEntry, i) => {\r\n            return <circle key={i} cx={scaleX(xy.x)} cy={scaleY(xy.y)} r={2} fill={\"red\"}></circle>\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (<BaseNode title=\"Scatter Plot\" {...this.props}\r\n            input={ScatterPlotNode.InputFormat} output={ScatterPlotNode.OutputFormat}>\r\n            <div>\r\n                <svg width={this.props.width-65} height={this.props.height-70} viewBox=\"0,0, 100,100\" className=\"node-noglobals\">\r\n                    {this.buildgraph(this.props.resolvedData.x, this.props.resolvedData.y)}\r\n                </svg>\r\n            </div>\r\n        </BaseNode>);\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport { CanvasNode, BaseNode } from 'compute-nodes';\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { DataPreviewNode } from '../DataPreviewNode';\r\n\r\n\r\ninterface OwnProps extends CanvasNode {\r\n    resolvedData: any\r\n}\r\n\r\nexport class DataPreviewGraphNode extends Component<OwnProps> {\r\n\r\n    mapArray(array: any[]) {\r\n        const maxRows = 30;\r\n        let more: any = null;\r\n\r\n        if (array.length > maxRows) {\r\n            more = <Row><Col>{array.length - maxRows} more rows...</Col></Row>\r\n            array = array.slice(0, maxRows);\r\n        }\r\n\r\n        const entries = array.map((d, i) => {\r\n            return (\r\n                <Row key={i}>\r\n                    {this.getView(d)}\r\n                </Row>);\r\n        });\r\n\r\n        return <>\r\n            {entries}\r\n            {more}\r\n        </>;\r\n    }\r\n\r\n    getView(data: any) {\r\n        const datatype = typeof data;\r\n        switch (datatype) {\r\n            case 'object':\r\n                if (Array.isArray(data)) {\r\n                    return this.mapArray(data);\r\n                } else {\r\n                    Object.keys(data).map(key => {\r\n                        return (\r\n                            <Col>{data[key]}</Col>\r\n                        );\r\n                    });\r\n                }\r\n                break;\r\n            case 'string':\r\n            case 'number':\r\n                return <Col>{data}</Col>\r\n            case 'undefined':\r\n                return \"No data\";\r\n            default:\r\n                console.warn(\"unhandled type: \" + datatype);\r\n                return <span>{'' + data}</span>\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<BaseNode {...this.props}\r\n            title=\"Data Preview\"\r\n            input={DataPreviewNode.InputFormat}>\r\n            <div className=\"gn-data-preview container node-noglobals\"\r\n                style={{\r\n                    maxHeight: this.props.height-60 + \"px\"\r\n                }}>\r\n                {this.getView(this.props.resolvedData.a)}\r\n            </div>\r\n        </BaseNode>);\r\n    }\r\n}","import React, { Component } from 'react';\n\nimport { Form } from 'react-bootstrap';\n\nimport NumberInputNode from '../NumberInputNode';\nimport { BaseNode, NodeResolver } from 'compute-nodes';\n\n\ninterface OwnProps extends NumberInputNode {\n    name: string;\n    resolver: NodeResolver;\n}\n\ninterface DispatchProps {\n    setPinData(pinId: string, data: any): void;\n    updateNode(nodeId: string, ...changes: any): void;\n}\n\ntype Props = DispatchProps & OwnProps;\n\n\nexport class NumberInputGraphNode extends Component<Props> {\n\n    inputRef: any;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.inputRef = React.createRef();\n        this.onBlur = this.onBlur.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onBlur(event: any) {\n        this.props.resolver.updateNode(this.props.id,\n            { data: { ...this.props.data, value: this.props.data.value } },\n            { invalidateOutput: true });\n    }\n\n    onChange(ev: any) {\n        this.props.resolver.updateNode(this.props.id,\n            { data: { ...this.props.data, value: ev.target.value } },\n            { invalidateOutput: true })\n    }\n\n    render() {\n        return (<BaseNode title=\"Number Input\" {...this.props}\n            output={NumberInputNode.OutputFormat} >\n            <Form.Control size=\"lg\" type=\"text\" onBlur={this.onBlur}\n                style={{\n                    padding: \"5px\",\n                    height: \"2em\",\n                }}\n                placeholder={\"\" + this.props.data.value} ref={this.inputRef}\n                value={this.props.data.value} onChange={this.onChange}\n                onKeyPress={(event: any) => {\n                    if (event.key === \"Enter\") {\n                        this.onBlur({});\n                    }\n                }} />\n        </BaseNode>);\n    }\n}","import React, { Component } from 'react';\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport { BaseNode, NodeResolver, CanvasNode } from 'compute-nodes';\r\n\r\n\r\ninterface OwnProps extends CanvasNode {\r\n    resolver: NodeResolver;\r\n}\r\n\r\n/**\r\n * Example single class definition\r\n */\r\nexport class RandomDataGraphNode extends Component<OwnProps> {\r\n\r\n    static Type = \"RandomDataGraphNode\";\r\n    static Name = \"Random Data\";\r\n    static InputFormat = undefined;\r\n    static MinDimensions = {\r\n        height: 14 * 8,\r\n    }\r\n    static OutputFormat = {\r\n        data: {\r\n            \"type\": \"number[]\"\r\n        }\r\n    }\r\n    static Construct = (props: any) => new CanvasNode(props)\r\n    static LocalResolve = (node: any, input: any) => { return { data: node.data } }\r\n    static Render = (props: any) => <RandomDataGraphNode {...props} />\r\n\r\n    //\r\n\r\n    constructor(props: OwnProps) {\r\n        super(props);\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(ev: any) {\r\n        let randData = this.generateRandomData();\r\n        this.props.resolver.updateNode(this.props.id, { data: randData }, { invalidateOutput: true })\r\n    }\r\n\r\n    generateRandomData() {\r\n        let randData = [];\r\n        for (let i = 0; i < 100; ++i) {\r\n            randData.push(Math.floor(Math.random() * 100));\r\n        }\r\n        return randData;\r\n    }\r\n\r\n    render() {\r\n        return (<BaseNode title=\"Random Data\" {...this.props}\r\n            output={RandomDataGraphNode.OutputFormat} >\r\n            <Button onClick={this.onChange}>Generate</Button>\r\n        </BaseNode>);\r\n    }\r\n}","import React from 'react';\nimport { Row, Col, Container, Button } from 'react-bootstrap';\n\nimport { Canvas, ItemTypes } from 'compute-nodes';\n\nimport { useDrag } from 'react-dnd'\n\nimport NumberInputNode from './nodes/NumberInputNode';\nimport SumValuesNode from './nodes/SumValuesNode';\nimport ScatterPlotNode from './nodes/ScatterPlotNode';\nimport SumValuesGraphNode from './nodes/components/SumValuesGraphNode';\nimport { LocalNodeRegistry, LocalNodeResolver } from './resolver/LocalNodeResolver';\nimport { DataPreviewNode } from './nodes/DataPreviewNode';\nimport { ScatterPlotGraphNode } from './nodes/components/ScatterPlotGraphNode';\nimport { DataPreviewGraphNode } from './nodes/components/DataPreviewGraphNode';\nimport { NumberInputGraphNode } from './nodes/components/NumberInputGraphNode';\nimport { RandomDataGraphNode } from './nodes/components/RandomDataGraphNode';\n\ninterface DashboardProps {\n    columns: any[],\n}\n\ninterface DashboardState {\n    filter: string;\n}\n\nfunction VisualNodeOption({ name, details }: any) {\n    const [, dragRef] = useDrag({\n        item: { ...details, type: ItemTypes.VISUAL_NODE },\n        collect: monitor => ({}),\n    });\n\n    return (\n        <div className=\"sidebar-node\" ref={dragRef}>{name}</div>\n    );\n}\n\nexport class Dashboard extends React.Component<DashboardProps, DashboardState> {\n    nodeRegistry: LocalNodeRegistry;\n    resolver: LocalNodeResolver;\n    canvas: any;\n\n    constructor(props: any) {\n        super(props);\n\n        this.state = {\n            filter: \"\",\n        };\n\n        this.canvas = React.createRef()\n\n        this.nodeRegistry = new LocalNodeRegistry();\n\n        this.nodeRegistry.registerType({\n            ...SumValuesNode,\n            Render: (args: any) => { return <SumValuesGraphNode {...args} /> }\n        });\n\n        this.nodeRegistry.registerType({\n            ...NumberInputNode,\n            Render: (args: any) => { return <NumberInputGraphNode {...args} /> }\n        });\n        this.nodeRegistry.registerType({\n            ...DataPreviewNode,\n            Render: (args: any) => { return <DataPreviewGraphNode {...args} /> }\n        });\n        this.nodeRegistry.registerType({\n            ...ScatterPlotNode,\n            Render: (args: any) => { return <ScatterPlotGraphNode {...args} /> }\n        });\n        this.nodeRegistry.registerType({\n            ...RandomDataGraphNode,\n        });\n\n        this.resolver = new LocalNodeResolver(this.nodeRegistry);\n        this.resolver.restoreNodes({\"wauhumvtystyqxiueahna1age\":{\"id\":\"wauhumvtystyqxiueahna1age\",\"type\":\"SumNumbers\",\"x\":288,\"y\":112,\"width\":288,\"height\":144,\"inputPins\":{\"a\":\"djnqvixdjmbsngbieahna1ecl-value\",\"b\":\"djnqvixdjmbsngbieahna1ecl-value\"},\"data\":{\"op\":\"+\"}},\"djnqvixdjmbsngbieahna1ecl\":{\"id\":\"djnqvixdjmbsngbieahna1ecl\",\"type\":\"InputVariable\",\"x\":0,\"y\":256,\"width\":160,\"height\":112,\"inputPins\":{},\"data\":{\"value\":\"10\",\"name\":\"\"}},\"idgbhdxfmjishsdleahna2cad\":{\"id\":\"idgbhdxfmjishsdleahna2cad\",\"type\":\"RandomDataGraphNode\",\"x\":144,\"y\":752,\"width\":160,\"height\":112,\"inputPins\":{},\"data\":[12,89,82,7,13,14,6,9,58,3,30,73,44,26,94,78,39,32,97,94,47,57,50,95,88,94,94,80,33,0,59,7,91,96,89,26,68,5,16,51,46,2,86,81,89,91,20,73,57,73,37,80,9,28,79,72,49,54,0,39,27,17,17,68,51,0,2,42,57,1,63,91,84,94,62,88,72,44,1,71,50,3,13,0,58,11,22,69,92,12,48,28,68,62,64,38,86,96,21,88]},\"oeyyyrfcurccpwpheahna2gbm\":{\"id\":\"oeyyyrfcurccpwpheahna2gbm\",\"type\":\"ScatterPlotGraph\",\"x\":1136,\"y\":464,\"width\":384,\"height\":368,\"inputPins\":{\"x\":\"cqdeflgstsexdqkveanak7404-sum\",\"y\":\"yhofknaevtcoxethean9ji9de-sum\"}},\"vmakunxfoiksawoweahna31ll\":{\"id\":\"vmakunxfoiksawoweahna31ll\",\"type\":\"DataPreview\",\"x\":432,\"y\":832,\"width\":192,\"height\":240,\"inputPins\":{\"a\":\"idgbhdxfmjishsdleahna2cad-data\"}},\"fhdcppzpelrkxocgeahna3n05\":{\"id\":\"fhdcppzpelrkxocgeahna3n05\",\"type\":\"SumNumbers\",\"x\":688,\"y\":96,\"width\":288,\"height\":144,\"inputPins\":{\"a\":\"wauhumvtystyqxiueahna1age-sum\",\"b\":\"wauhumvtystyqxiueahna1age-sum\"},\"data\":{\"op\":\"*\"}},\"yhofknaevtcoxethean9ji9de\":{\"id\":\"yhofknaevtcoxethean9ji9de\",\"type\":\"SumNumbers\",\"x\":416,\"y\":576,\"width\":256,\"height\":224,\"inputPins\":{\"a\":\"djnqvixdjmbsngbieahna1ecl-value\",\"b\":\"idgbhdxfmjishsdleahna2cad-data\"},\"data\":{\"op\":\"-\"}},\"uguqlbyzpaiifdhrean9jmhem\":{\"id\":\"uguqlbyzpaiifdhrean9jmhem\",\"type\":\"RandomDataGraphNode\",\"x\":528,\"y\":288,\"width\":160,\"height\":112,\"inputPins\":{},\"data\":[44,7,27,52,9,55,5,73,26,40,50,87,63,22,61,85,62,56,34,42,56,45,5,4,30,41,54,26,20,11,0,70,3,99,84,19,61,56,19,80,45,37,20,68,62,17,0,10,18,20,75,84,56,64,28,55,72,62,65,52,16,91,96,68,34,33,0,42,69,97,78,87,2,13,27,75,67,41,55,80,82,5,59,24,2,65,80,40,72,12,77,70,82,98,53,16,12,32,89,43]},\"yqqexvbvxkggbsxceanak6lg5\":{\"id\":\"yqqexvbvxkggbsxceanak6lg5\",\"type\":\"InputVariable\",\"x\":528,\"y\":416,\"width\":160,\"height\":112,\"inputPins\":{},\"data\":{\"value\":\"4\",\"name\":\"\"}},\"cqdeflgstsexdqkveanak7404\":{\"id\":\"cqdeflgstsexdqkveanak7404\",\"type\":\"SumNumbers\",\"x\":784,\"y\":288,\"width\":288,\"height\":144,\"inputPins\":{\"b\":\"yqqexvbvxkggbsxceanak6lg5-value\",\"a\":\"uguqlbyzpaiifdhrean9jmhem-data\"},\"data\":{\"op\":\"pow\"}},\"oqfmoleswjxeiamxeanaklk9b\":{\"id\":\"oqfmoleswjxeiamxeanaklk9b\",\"type\":\"DataPreview\",\"x\":1168,\"y\":208,\"width\":208,\"height\":160,\"inputPins\":{\"a\":\"cqdeflgstsexdqkveanak7404-sum\"}}})\n    }\n\n    render() {\n\n        return <Container fluid>\n            <Row>\n                <Col md={1.5} style={{ paddingTop: '10px', paddingLeft: '15px' }}>\n                    <Row>\n                        <Button style={{margin: \"2px\"}} onClick={(e: any) => navigator.clipboard.writeText(JSON.stringify(this.resolver.getNodes()))}>Save</Button>\n                        <Button style={{margin: \"2px\"}} onClick={(e: any) => this.canvas.current.undoOnce()}>Undo</Button>\n                        <Button style={{margin: \"2px\"}} onClick={(e: any) => this.canvas.current.redoOnce()}>Redo</Button>\n                    </Row>\n\n                    {Object.entries(this.nodeRegistry.nodeTypes).map(([type, info]) => {\n                        return <VisualNodeOption key={type} name={info.Name} details={{ nodeType: type }} />;\n                    })}\n                </Col>\n                <Col md>\n                    <Canvas ref={this.canvas} resolver={this.resolver} />\n                </Col>\n            </Row>\n        </Container>;\n    }\n\n}","import React from 'react';\n\nimport { Dashboard } from './Dashboard';\nimport 'compute-nodes/dist/index.css';\n\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nconst App = () => {\n    return (< DndProvider backend={HTML5Backend} >\n        <Dashboard />\n    </DndProvider>)\n}\n\nexport default App","import './index.css'\nimport './styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\nReactDOM.render( < App / > , document.getElementById('root'))"],"sourceRoot":""}